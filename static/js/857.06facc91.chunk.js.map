{"version":3,"file":"static/js/857.06facc91.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/NameContactsList/NameContactsList.module.css?a262","components/NameContactsList/NameContactsList.jsx","../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/PhonebookForm/PhonebookForm.module.css?56c1","components/PhonebookForm/PhonebookForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"NameContactsList_contacts__XJtW7\",\"contacts__list\":\"NameContactsList_contacts__list__I4Cl9\",\"item__content\":\"NameContactsList_item__content__BT3qC\",\"contacts__btn\":\"NameContactsList_contacts__btn__9vGLa\"};","import css from './NameContactsList.module.css';\nimport { deleteContact } from '../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const NameContactsList = () => {\n  const dispatch = useDispatch();\n  const contactsItem = useSelector(state => state.contacts.items);\n  const filterValue = useSelector(state => state.filter);\n  console.log(filterValue);\n  console.log(contactsItem);\n  const visibleContacts = contactsItem.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n\n  return (\n    <div className={css.contacts}>\n      <ul className={css.contacts__list}>\n        {visibleContacts.length > 0\n          ? visibleContacts.map(item => {\n              const { id, name, number } = item;\n              return (\n                <li key={id}>\n                  <div className={css.item__content}>\n                    {name}: {number}\n                    <button\n                      className={css.contacts__btn}\n                      type=\"button\"\n                      onClick={() => dispatch(deleteContact(id))}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </li>\n              );\n            })\n          : null}\n      </ul>\n    </div>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"PhonebookForm_phonebook__gIbYH\",\"phonebook__form\":\"PhonebookForm_phonebook__form__E5kS6\",\"phonebook__label\":\"PhonebookForm_phonebook__label__U+Cq+\",\"phonebook__input\":\"PhonebookForm_phonebook__input__7lcvp\",\"phonebook__btn\":\"PhonebookForm_phonebook__btn__+cRIC\"};","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './PhonebookForm.module.css';\nimport { addContacts } from '../../redux/operations';\n\nexport const PhonebookForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactsSelector = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkName = contactsSelector.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (!checkName) {\n      const currentContact = { id: nanoid(), number, name };\n      dispatch(addContacts(currentContact));\n    } else {\n      window.alert(`${name} is already in contacts`);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.phonebook}>\n      <form className={css.phonebook__form} onSubmit={handleSubmit}>\n        <label className={css.phonebook__label}>\n          Name\n          <input\n            className={css.phonebook__input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n\n        <label className={css.phonebook__label}>\n          Numder\n          <input\n            className={css.phonebook__input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={e => setNumber(e.target.value)}\n          />\n        </label>\n        <button className={css.phonebook__btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__label\":\"Filter_filter__label__ttfPR\",\"filter__text\":\"Filter_filter__text__aAasw\",\"filter__input\":\"Filter_filter__input__toa89\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterSelector = useSelector(state => state.filter);\n\n  return (\n    <label className={css.filter__label}>\n      <span className={css.filter__text}>Find contacts by name</span>\n      <input\n        className={css.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Enter the person's name\"\n        value={filterSelector}\n        onInput={e => dispatch(contactsFilter(e.target.value.toLowerCase()))}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { NameContactsList } from '../components/NameContactsList/NameContactsList';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { Filter } from '../components/Filter/Filter';\n\nimport { fetchContacts } from '../redux/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const styles = {\n    title: {\n      fontWeight: 500,\n      fontSize: 34,\n    },\n  };\n\n  return (\n    <section>\n      <h2 style={styles.title}>Phonebook</h2>\n      <PhonebookForm />\n      <h2 style={styles.title}>Contacts</h2>\n      {isLoading && !error && <p>Request in progress...</p>}\n      <Filter />\n      <NameContactsList />\n    </section>\n  );\n}\n"],"names":["NameContactsList","dispatch","useDispatch","contactsItem","useSelector","state","contacts","items","filterValue","filter","console","log","visibleContacts","contact","name","toLowerCase","includes","className","css","length","map","item","id","number","type","onClick","deleteContact","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","PhonebookForm","useState","setName","setNumber","contactsSelector","onSubmit","e","preventDefault","some","window","alert","currentContact","addContacts","pattern","title","required","value","onChange","target","Filter","filterSelector","onInput","contactsFilter","Contacts","isLoading","error","useEffect","fetchContacts","styles","fontWeight","fontSize","style"],"sourceRoot":""}